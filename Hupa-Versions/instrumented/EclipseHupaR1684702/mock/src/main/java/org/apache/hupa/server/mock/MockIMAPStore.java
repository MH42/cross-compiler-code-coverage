/****************************************************************
 * Licensed to the Apache Software Foundation (ASF) under one   *
 * or more contributor license agreements.  See the NOTICE file *
 * distributed with this work for additional information        *
 * regarding copyright ownership.  The ASF licenses this file   *
 * to you under the Apache License, Version 2.0 (the            *
 * "License"); you may not use this file except in compliance   *
 * with the License.  You may obtain a copy of the License at   *
 *                                                              *
 *   http://www.apache.org/licenses/LICENSE-2.0                 *
 *                                                              *
 * Unless required by applicable law or agreed to in writing,   *
 * software distributed under the License is distributed on an  *
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY       *
 * KIND, either express or implied.  See the License for the    *
 * specific language governing permissions and limitations      *
 * under the License.                                           *
 ****************************************************************/
package org.apache.hupa.server.mock;


import tc3.desktop.InstrumentationLoggerProvider;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.Properties;

import javax.mail.AuthenticationFailedException;
import javax.mail.Folder;
import javax.mail.MessagingException;
import javax.mail.Provider;
import javax.mail.Session;
import javax.mail.URLName;

import com.google.inject.Inject;
import com.sun.mail.imap.IMAPStore;

public class MockIMAPStore extends IMAPStore{

    static {
	  InstrumentationLoggerProvider.get().instrument("org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6d386635700x2_____org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6d386635700x1_____org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6d38663570_____org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6d386635700x4_____org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6d386635700x3_____org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6d386635700x0");
	  InstrumentationLoggerProvider.get().instrument("org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6da536a4cd0x2_____org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6da536a4cd0x4_____org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6da536a4cd0x3_____org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6da536a4cd0x1_____org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6da536a4cd0x0_____org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6da536a4cd");
	  InstrumentationLoggerProvider.get().instrument("org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6dda1f761b0x2_____org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6dda1f761b0x0_____org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6dda1f761b0x4_____org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6dda1f761b0x3_____org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6dda1f761b0x1_____org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6dda1f761b");
	  InstrumentationLoggerProvider.get().instrument("org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6d3d3b33e70x2_____org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6d3d3b33e7_____org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6d3d3b33e70x0_____org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6d3d3b33e70x4_____org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6d3d3b33e70x1_____org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6d3d3b33e70x3");
	  InstrumentationLoggerProvider.get().instrument("org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6da74fcd660x1_____org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6da74fcd660x4_____org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6da74fcd660x2_____org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6da74fcd66_____org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6da74fcd660x3_____org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6da74fcd660x0");
	  InstrumentationLoggerProvider.get().instrument("org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6d3db20c7f0x1_____org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6d3db20c7f0x2_____org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6d3db20c7f0x4_____org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6d3db20c7f0x0_____org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6d3db20c7f_____org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6d3db20c7f0x3");
	  InstrumentationLoggerProvider.get().instrument("org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6d4cd8a9930x1_____org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6d4cd8a9930x2_____org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6d4cd8a9930x0_____org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6d4cd8a9930x30x00x0_____org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6d4cd8a9930x3_____org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6d4cd8a993_____org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6d4cd8a9930x30x0");
	}
	

	public final static String MOCK_INBOX_FOLDER = "Mock-Inbox";
    public final static String MOCK_SENT_FOLDER = "Mock-Sent";
    public final static String MOCK_TRASH_FOLDER = "Mock-Trash";
    public final static String MOCK_DRAFTS_FOLDER = "Mock-Drafts";
    public static final String MOCK_HOST = "hupa.demo";
    public final static String MOCK_LOGIN = "demo";
    private Map<String, String> validLogins = new HashMap<String, String>();
    private boolean connected = false;
    private final List<MockIMAPFolder> folders = new ArrayList<MockIMAPFolder>();
    private List<String> capList;
    static final URLName demoUrl = new URLName(null, MOCK_HOST, 0, null, null, null);

    /**
     * Default constructor, it creates the folder structure and loads messages for demo
     */
    @Inject
    public MockIMAPStore(Properties prop) {
        this(Session.getInstance(prop), demoUrl);
		InstrumentationLoggerProvider.get().instrument("org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6dbbcc96030x20x00x0_____org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6dbbcc96030x20x0");
		InstrumentationLoggerProvider.get().instrument("org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6dbbcc96030x2_____org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6dbbcc96030x1_____org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6dbbcc96030x10x0_____org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6dbbcc96030x0");
		InstrumentationLoggerProvider.get().instrument("org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6d546da7350x10x0_____org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6d546da7350x10x1_____org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6d546da735_____org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6d546da7350x0_____org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6d546da7350x2_____org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6d546da7350x1");
		InstrumentationLoggerProvider.get().instrument("org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6dbbcc9603");
		InstrumentationLoggerProvider.get().instrument("org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6d836b019c0x20x00x00x0_____org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6d836b019c0x20x00x00x1_____org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6d836b019c0x10x0_____org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6d836b019c0x2_____org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6d836b019c0x20x00x00x2_____org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6d836b019c_____org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6d836b019c0x10x2_____org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6d836b019c0x1_____org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6d836b019c0x10x1_____org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6d836b019c0x20x0_____org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6d836b019c0x20x00x0_____org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6d836b019c0x0");
		InstrumentationLoggerProvider.get().instrument("org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6d180ae8c40x1_____org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6d180ae8c40x20x0_____org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6d180ae8c40x0_____org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6d180ae8c40x30x0_____org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6d180ae8c40x3_____org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6d180ae8c40x30x00x0_____org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6d180ae8c40x2_____org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6d180ae8c40x20x1_____org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6d180ae8c40x30x00x00x0_____org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6d180ae8c40x30x00x00x1_____org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6d180ae8c4");
		InstrumentationLoggerProvider.get().instrument("org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6d1b4f821d0x0_____org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6d1b4f821d0x1_____org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6d1b4f821d_____org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6d1b4f821d0x2");
		InstrumentationLoggerProvider.get().instrument("org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6d0x0_____org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6d_____org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6d0x1");
    }

    public MockIMAPStore(Session ses) {
        this(ses, demoUrl);
		InstrumentationLoggerProvider.get().instrument("org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6db0d965b00x20x0");
		InstrumentationLoggerProvider.get().instrument("org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6db0d965b00x0_____org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6db0d965b0_____org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6db0d965b00x2_____org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6db0d965b00x1_____org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6db0d965b00x10x0");
		InstrumentationLoggerProvider.get().instrument("org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6d546da7350x10x0_____org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6d546da7350x10x1_____org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6d546da735_____org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6d546da7350x0_____org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6d546da7350x2_____org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6d546da7350x1");
		InstrumentationLoggerProvider.get().instrument("org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6d836b019c0x20x00x00x0_____org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6d836b019c0x20x00x00x1_____org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6d836b019c0x10x0_____org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6d836b019c0x2_____org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6d836b019c0x20x00x00x2_____org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6d836b019c_____org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6d836b019c0x10x2_____org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6d836b019c0x1_____org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6d836b019c0x10x1_____org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6d836b019c0x20x0_____org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6d836b019c0x20x00x0_____org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6d836b019c0x0");
		InstrumentationLoggerProvider.get().instrument("org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6d180ae8c40x1_____org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6d180ae8c40x20x0_____org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6d180ae8c40x0_____org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6d180ae8c40x30x0_____org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6d180ae8c40x3_____org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6d180ae8c40x30x00x0_____org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6d180ae8c40x2_____org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6d180ae8c40x20x1_____org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6d180ae8c40x30x00x00x0_____org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6d180ae8c40x30x00x00x1_____org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6d180ae8c4");
		InstrumentationLoggerProvider.get().instrument("org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6d1b4f821d0x0_____org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6d1b4f821d0x1_____org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6d1b4f821d_____org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6d1b4f821d0x2");
		InstrumentationLoggerProvider.get().instrument("org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6d0x0_____org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6d_____org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6d0x1");
    }
    /**
     * Customized constructor
     */
    public MockIMAPStore(Session session, URLName url) {
        super(session, url);
		InstrumentationLoggerProvider.get().instrument("org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6d860584590x30x10x00x10x0_____org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6d860584590x30x1_____org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6d860584590x30x10x00x0_____org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6d860584590x30x10x0_____org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6d860584590x30x10x00x1");
		InstrumentationLoggerProvider.get().instrument("org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6d860584590x30x0");
		InstrumentationLoggerProvider.get().instrument("org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6d860584590x3_____org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6d860584590x0_____org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6d860584590x2_____org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6d860584590x1_____org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6d860584590x10x0_____org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6d860584590x20x0");
		InstrumentationLoggerProvider.get().instrument("org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6d86058459");
		InstrumentationLoggerProvider.get().instrument("org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6d546da7350x10x0_____org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6d546da7350x10x1_____org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6d546da735_____org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6d546da7350x0_____org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6d546da7350x2_____org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6d546da7350x1");
		InstrumentationLoggerProvider.get().instrument("org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6d836b019c0x20x00x00x0_____org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6d836b019c0x20x00x00x1_____org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6d836b019c0x10x0_____org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6d836b019c0x2_____org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6d836b019c0x20x00x00x2_____org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6d836b019c_____org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6d836b019c0x10x2_____org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6d836b019c0x1_____org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6d836b019c0x10x1_____org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6d836b019c0x20x0_____org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6d836b019c0x20x00x0_____org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6d836b019c0x0");
		InstrumentationLoggerProvider.get().instrument("org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6d180ae8c40x1_____org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6d180ae8c40x20x0_____org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6d180ae8c40x0_____org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6d180ae8c40x30x0_____org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6d180ae8c40x3_____org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6d180ae8c40x30x00x0_____org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6d180ae8c40x2_____org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6d180ae8c40x20x1_____org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6d180ae8c40x30x00x00x0_____org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6d180ae8c40x30x00x00x1_____org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6d180ae8c4");
		InstrumentationLoggerProvider.get().instrument("org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6d1b4f821d0x0_____org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6d1b4f821d0x1_____org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6d1b4f821d_____org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6d1b4f821d0x2");
		InstrumentationLoggerProvider.get().instrument("org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6d0x0_____org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6d_____org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6d0x1");
        if (url != null && MOCK_HOST.equals(url.getHost())) {
            InstrumentationLoggerProvider.get().instrument("org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6d860584590x30x10x1");
			InstrumentationLoggerProvider.get().instrument("org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6d860584590x30x10x10x00x0_____org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6d860584590x30x10x10x0");
			validLogins.put(MOCK_LOGIN, MOCK_LOGIN);
            InstrumentationLoggerProvider.get().instrument("org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6d860584590x30x10x10x1_____org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6d860584590x30x10x10x10x0");
			try {
                InstrumentationLoggerProvider.get().instrument("org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6d860584590x30x10x10x10x00x00x00x1_____org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6d860584590x30x10x10x10x00x00x0_____org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6d860584590x30x10x10x10x00x00x00x00x0_____org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6d860584590x30x10x10x10x00x00x00x0_____org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6d860584590x30x10x10x10x00x00x00x00x1_____org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6d860584590x30x10x10x10x00x0");
				new MockIMAPFolder(MOCK_INBOX_FOLDER, this).create(Folder.HOLDS_FOLDERS | Folder.HOLDS_MESSAGES);
                InstrumentationLoggerProvider.get().instrument("org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6d860584590x30x10x10x10x00x10x00x1_____org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6d860584590x30x10x10x10x00x10x00x00x0_____org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6d860584590x30x10x10x10x00x1_____org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6d860584590x30x10x10x10x00x10x00x00x1_____org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6d860584590x30x10x10x10x00x10x00x0_____org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6d860584590x30x10x10x10x00x10x0");
				new MockIMAPFolder(MOCK_SENT_FOLDER, this).create(Folder.HOLDS_FOLDERS | Folder.HOLDS_MESSAGES);
                InstrumentationLoggerProvider.get().instrument("org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6d860584590x30x10x10x10x00x20x00x00x0_____org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6d860584590x30x10x10x10x00x2_____org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6d860584590x30x10x10x10x00x20x00x0_____org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6d860584590x30x10x10x10x00x20x00x00x1_____org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6d860584590x30x10x10x10x00x20x00x1_____org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6d860584590x30x10x10x10x00x20x0");
				new MockIMAPFolder(MOCK_TRASH_FOLDER, this).create(Folder.HOLDS_FOLDERS | Folder.HOLDS_MESSAGES);
                InstrumentationLoggerProvider.get().instrument("org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6d860584590x30x10x10x10x00x30x00x00x0_____org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6d860584590x30x10x10x10x00x30x00x00x1_____org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6d860584590x30x10x10x10x00x3_____org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6d860584590x30x10x10x10x00x30x0_____org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6d860584590x30x10x10x10x00x30x00x1_____org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6d860584590x30x10x10x10x00x30x00x0");
				new MockIMAPFolder(MOCK_DRAFTS_FOLDER, this).create(Folder.HOLDS_FOLDERS | Folder.HOLDS_MESSAGES);
                InstrumentationLoggerProvider.get().instrument("org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6d860584590x30x10x10x10x00x40x00x00x00x0_____org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6d860584590x30x10x10x10x00x40x00x00x0_____org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6d860584590x30x10x10x10x00x4_____org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6d860584590x30x10x10x10x00x40x00x0_____org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6d860584590x30x10x10x10x00x40x00x00x00x1_____org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6d860584590x30x10x10x10x00x40x0");
				((MockIMAPFolder)getFolder(MOCK_INBOX_FOLDER)).loadDemoMessages(session);
            } catch (Exception e) {
                InstrumentationLoggerProvider.get().instrument("org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6d860584590x30x10x10x10x10x0_____org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6d860584590x30x10x10x10x10x00x0_____org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6d860584590x30x10x10x10x1_____org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6d860584590x30x10x10x10x10x1");
				InstrumentationLoggerProvider.get().instrument("org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6d860584590x30x10x10x10x10x10x00x0_____org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6d860584590x30x10x10x10x10x10x0");
				e.printStackTrace();
            }
        }
    }

    public static Provider getProvider() {
        InstrumentationLoggerProvider.get().instrument("org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6d9c0d3b9a0x1_____org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6d9c0d3b9a0x3_____org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6d9c0d3b9a_____org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6d9c0d3b9a0x0_____org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6d9c0d3b9a0x2");
		InstrumentationLoggerProvider.get().instrument("org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6d9c0d3b9a0x30x0_____org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6d9c0d3b9a0x30x00x00x0_____org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6d9c0d3b9a0x30x00x00x1_____org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6d9c0d3b9a0x30x00x0_____org_apache_hupa_server_mock_MockIMAPStore_java0x0");
		return new Provider(Provider.Type.STORE,"mockimap",MockIMAPStore.class.getName(),"","");
    }

    public synchronized boolean save(MockIMAPFolder folder) {
        InstrumentationLoggerProvider.get().instrument("org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6d761e2aee0x4_____org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6d761e2aee0x0_____org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6d761e2aee0x3_____org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6d761e2aee0x30x0_____org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6d761e2aee_____org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6d761e2aee0x1_____org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6d761e2aee0x2");
		InstrumentationLoggerProvider.get().instrument("org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6d761e2aee0x40x00x0_____org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6d761e2aee0x40x00x00x0_____org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6d761e2aee0x40x0");
		for (MockIMAPFolder iFolder : folders) {
            InstrumentationLoggerProvider.get().instrument("org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6d761e2aee0x40x00x1");
			InstrumentationLoggerProvider.get().instrument("org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6d761e2aee0x40x00x10x00x00x0_____org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6d761e2aee0x40x00x10x00x0_____org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6d761e2aee0x40x00x10x0_____org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6d761e2aee0x40x00x10x00x00x1");
			if (iFolder.getFullName().equals(folder.getFullName())) {
                InstrumentationLoggerProvider.get().instrument("org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6d761e2aee0x40x00x10x00x1");
				InstrumentationLoggerProvider.get().instrument("org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6d761e2aee0x40x00x10x00x10x0");
				return false;
            }
        }
        InstrumentationLoggerProvider.get().instrument("org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6d761e2aee0x40x10x0_____org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6d761e2aee0x40x1");
		folders.add(folder);
        InstrumentationLoggerProvider.get().instrument("org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6d761e2aee0x40x2");
		return true;
    }

    public synchronized boolean delete(MockIMAPFolder folder, boolean recursive) {
        InstrumentationLoggerProvider.get().instrument("org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6d4d8fba8e_____org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6d4d8fba8e0x5_____org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6d4d8fba8e0x1_____org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6d4d8fba8e0x40x0_____org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6d4d8fba8e0x0_____org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6d4d8fba8e0x30x0_____org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6d4d8fba8e0x4_____org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6d4d8fba8e0x3_____org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6d4d8fba8e0x2");
		InstrumentationLoggerProvider.get().instrument("org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6d4d8fba8e0x50x0_____org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6d4d8fba8e0x50x00x0_____org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6d4d8fba8e0x50x00x1");
		boolean found = false;
        InstrumentationLoggerProvider.get().instrument("org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6d4d8fba8e0x50x10x0_____org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6d4d8fba8e0x50x10x00x0_____org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6d4d8fba8e0x50x10x10x0_____org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6d4d8fba8e0x50x10x00x1_____org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6d4d8fba8e0x50x1_____org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6d4d8fba8e0x50x10x2_____org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6d4d8fba8e0x50x10x1");
		for (int i= 0; i < folders.size(); i++) {
            InstrumentationLoggerProvider.get().instrument("org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6d4d8fba8e0x50x10x3");
			InstrumentationLoggerProvider.get().instrument("org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6d4d8fba8e0x50x10x30x00x00x0_____org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6d4d8fba8e0x50x10x30x00x0_____org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6d4d8fba8e0x50x10x30x0_____org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6d4d8fba8e0x50x10x30x00x00x00x0_____org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6d4d8fba8e0x50x10x30x00x00x1");
			if (folders.get(i).getFullName().equals(folder.getFullName())) {
                InstrumentationLoggerProvider.get().instrument("org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6d4d8fba8e0x50x10x30x00x1");
				InstrumentationLoggerProvider.get().instrument("org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6d4d8fba8e0x50x10x30x00x10x0_____org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6d4d8fba8e0x50x10x30x00x10x00x0");
				folders.remove(i);
                InstrumentationLoggerProvider.get().instrument("org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6d4d8fba8e0x50x10x30x00x10x1_____org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6d4d8fba8e0x50x10x30x00x10x10x0");
				found = true;
                InstrumentationLoggerProvider.get().instrument("org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6d4d8fba8e0x50x10x30x00x10x20x0_____org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6d4d8fba8e0x50x10x30x00x10x2");
				if(recursive == false) {
                    InstrumentationLoggerProvider.get().instrument("org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6d4d8fba8e0x50x10x30x00x10x20x1");
					InstrumentationLoggerProvider.get().instrument("org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6d4d8fba8e0x50x10x30x00x10x20x10x0");
					break;
                }
            } else if (folders.get(i).getFullName().startsWith(folder.getFullName() + MockIMAPFolder.SEPARATOR)) {
                InstrumentationLoggerProvider.get().instrument("org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6d4d8fba8e0x50x10x30x00x20x1");
				InstrumentationLoggerProvider.get().instrument("org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6d4d8fba8e0x50x10x30x00x2");
				InstrumentationLoggerProvider.get().instrument("org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6d4d8fba8e0x50x10x30x00x20x10x0_____org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6d4d8fba8e0x50x10x30x00x20x10x00x0");
				folders.remove(i);
            }

        }
        InstrumentationLoggerProvider.get().instrument("org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6d4d8fba8e0x50x2");
		return found;
    }

    public MockIMAPFolder getParent(MockIMAPFolder folder) {
        InstrumentationLoggerProvider.get().instrument("org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6dda0872530x2_____org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6dda0872530x1_____org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6dda0872530x3_____org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6dda0872530x20x0_____org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6dda087253_____org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6dda0872530x0");
		InstrumentationLoggerProvider.get().instrument("org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6dda0872530x30x00x0_____org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6dda0872530x30x00x00x0_____org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6dda0872530x30x0");
		for (MockIMAPFolder f : folders) {
            InstrumentationLoggerProvider.get().instrument("org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6dda0872530x30x00x1");
			InstrumentationLoggerProvider.get().instrument("org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6dda0872530x30x00x10x00x00x0_____org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6dda0872530x30x00x10x00x00x00x0_____org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6dda0872530x30x00x10x00x0_____org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6dda0872530x30x00x10x00x00x00x00x1_____org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6dda0872530x30x00x10x0_____org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6dda0872530x30x00x10x00x00x1_____org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6dda0872530x30x00x10x00x00x00x00x0");
			if ((f.getFullName() + MockIMAPFolder.SEPARATOR + folder.getName()).equals(folder.getFullName())) {
                InstrumentationLoggerProvider.get().instrument("org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6dda0872530x30x00x10x00x1");
				InstrumentationLoggerProvider.get().instrument("org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6dda0872530x30x00x10x00x10x0");
				return f;
            }
        }
        InstrumentationLoggerProvider.get().instrument("org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6dda0872530x30x1");
		return null;
    }

    public synchronized List<MockIMAPFolder> getChilds(MockIMAPFolder folder) {
        InstrumentationLoggerProvider.get().instrument("org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6d173117b70x4_____org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6d173117b70x3_____org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6d173117b70x1_____org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6d173117b70x2_____org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6d173117b7_____org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6d173117b70x20x0_____org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6d173117b70x0_____org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6d173117b70x30x0_____org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6d173117b70x20x1");
		InstrumentationLoggerProvider.get().instrument("org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6d173117b70x40x00x10x00x00x1_____org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6d173117b70x40x00x00x0_____org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6d173117b70x40x00x1_____org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6d173117b70x40x0_____org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6d173117b70x40x00x0_____org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6d173117b70x40x00x10x00x00x0_____org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6d173117b70x40x00x10x00x0_____org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6d173117b70x40x00x10x0_____org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6d173117b70x40x00x00x1");
		List<MockIMAPFolder> childs = new ArrayList<MockIMAPFolder>();
        InstrumentationLoggerProvider.get().instrument("org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6d173117b70x40x1_____org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6d173117b70x40x10x00x0_____org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6d173117b70x40x10x0");
		if (MockIMAPFolder.MOCK_DEFAULT_FOLDER.equals(folder.getFullName())) {
            InstrumentationLoggerProvider.get().instrument("org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6d173117b70x40x10x1");
			InstrumentationLoggerProvider.get().instrument("org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6d173117b70x40x10x10x00x0_____org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6d173117b70x40x10x10x00x00x0_____org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6d173117b70x40x10x10x0");
			for(MockIMAPFolder f: folders) {
                InstrumentationLoggerProvider.get().instrument("org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6d173117b70x40x10x10x00x1");
				InstrumentationLoggerProvider.get().instrument("org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6d173117b70x40x10x10x00x10x0_____org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6d173117b70x40x10x10x00x10x00x00x0_____org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6d173117b70x40x10x10x00x10x00x0_____org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6d173117b70x40x10x10x00x10x00x00x00x0");
				if (! MockIMAPFolder.MOCK_DEFAULT_FOLDER.equals(f.getFullName())) {
					InstrumentationLoggerProvider.get().instrument("org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6d173117b70x40x10x10x00x10x00x1");
					InstrumentationLoggerProvider.get().instrument("org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6d173117b70x40x10x10x00x10x00x10x0_____org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6d173117b70x40x10x10x00x10x00x10x00x0");
					childs.add(f);
				}
            }
            InstrumentationLoggerProvider.get().instrument("org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6d173117b70x40x10x10x1");
			return folders;
        } else {
            InstrumentationLoggerProvider.get().instrument("org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6d173117b70x40x10x2");
			InstrumentationLoggerProvider.get().instrument("org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6d173117b70x40x10x20x00x00x0_____org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6d173117b70x40x10x20x0_____org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6d173117b70x40x10x20x00x0");
			for (MockIMAPFolder f : folders) {
                InstrumentationLoggerProvider.get().instrument("org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6d173117b70x40x10x20x00x1");
				InstrumentationLoggerProvider.get().instrument("org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6d173117b70x40x10x20x00x10x00x00x0_____org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6d173117b70x40x10x20x00x10x0_____org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6d173117b70x40x10x20x00x10x00x0");
				if (f.getFullName().startsWith(
                        folder.getFullName() + MockIMAPFolder.SEPARATOR)) {
                    InstrumentationLoggerProvider.get().instrument("org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6d173117b70x40x10x20x00x10x00x1");
							InstrumentationLoggerProvider.get().instrument("org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6d173117b70x40x10x20x00x10x00x10x0_____org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6d173117b70x40x10x20x00x10x00x10x00x0");
					childs.add(f);

                }
            }
        }
        InstrumentationLoggerProvider.get().instrument("org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6d173117b70x40x2");
		return childs;
    }

    public synchronized void setValidLogins(Map<String,String> validLogins) {
        InstrumentationLoggerProvider.get().instrument("org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6d43ccb9d60x2_____org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6d43ccb9d6_____org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6d43ccb9d60x30x0_____org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6d43ccb9d60x30x00x1_____org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6d43ccb9d60x3_____org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6d43ccb9d60x0_____org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6d43ccb9d60x30x00x2_____org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6d43ccb9d60x1_____org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6d43ccb9d60x4_____org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6d43ccb9d60x30x00x0");
		InstrumentationLoggerProvider.get().instrument("org_apache_hupa_server_mock_MockIMAPStore_java0x0_____org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6d43ccb9d60x40x00x0_____org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6d43ccb9d60x40x0");
		this.validLogins = validLogins;
    }

    public synchronized void clear() {
        InstrumentationLoggerProvider.get().instrument("org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6d168cbb2e0x2_____org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6d168cbb2e0x1_____org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6d168cbb2e_____org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6d168cbb2e0x0_____org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6d168cbb2e0x3");
		InstrumentationLoggerProvider.get().instrument("org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6d168cbb2e0x30x0_____org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6d168cbb2e0x30x00x0");
		folders.clear();
    }

    @Override
    public synchronized void close() throws MessagingException {
        InstrumentationLoggerProvider.get().instrument("org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6dda38860c0x1_____org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6dda38860c0x2_____org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6dda38860c0x3_____org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6dda38860c0x0");
		InstrumentationLoggerProvider.get().instrument("org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6dda38860c");
		InstrumentationLoggerProvider.get().instrument("org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6dda38860c0x30x0_____org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6dda38860c0x30x00x0");
		connected = false;
    }

    @Override
    public synchronized Folder getDefaultFolder() throws MessagingException {
        InstrumentationLoggerProvider.get().instrument("org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6d213914bd0x0_____org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6d213914bd0x3_____org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6d213914bd0x1_____org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6d213914bd0x2");
		InstrumentationLoggerProvider.get().instrument("org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6d213914bd");
		InstrumentationLoggerProvider.get().instrument("org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6d213914bd0x30x00x0_____org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6d213914bd0x30x0");
		return getFolder(MockIMAPFolder.MOCK_DEFAULT_FOLDER);
    }

    @Override
    public synchronized Folder getFolder(String name) {
        InstrumentationLoggerProvider.get().instrument("org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6ddc1b2a9e");
		InstrumentationLoggerProvider.get().instrument("org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6ddc1b2a9e0x4_____org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6ddc1b2a9e0x3_____org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6ddc1b2a9e0x1_____org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6ddc1b2a9e0x30x0_____org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6ddc1b2a9e0x0_____org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6ddc1b2a9e0x2");
		InstrumentationLoggerProvider.get().instrument("org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6ddc1b2a9e0x40x0_____org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6ddc1b2a9e0x40x00x00x0_____org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6ddc1b2a9e0x40x00x0");
		for (MockIMAPFolder mfolder : folders) {
            InstrumentationLoggerProvider.get().instrument("org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6ddc1b2a9e0x40x00x1");
			InstrumentationLoggerProvider.get().instrument("org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6ddc1b2a9e0x40x00x10x00x0_____org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6ddc1b2a9e0x40x00x10x00x00x0_____org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6ddc1b2a9e0x40x00x10x0");
			if (mfolder.getFullName().equals(name)) {
                InstrumentationLoggerProvider.get().instrument("org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6ddc1b2a9e0x40x00x10x00x1");
				InstrumentationLoggerProvider.get().instrument("org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6ddc1b2a9e0x40x00x10x00x10x0");
				return mfolder;
            }
        }
        InstrumentationLoggerProvider.get().instrument("org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6ddc1b2a9e0x40x10x00x0_____org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6ddc1b2a9e0x40x10x00x1_____org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6ddc1b2a9e0x40x10x0_____org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6ddc1b2a9e0x40x1");
		return new MockIMAPFolder(name,this);
    }

    @Override
    public void idle() throws MessagingException {
		InstrumentationLoggerProvider.get().instrument("org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6d1adbcc34");
		InstrumentationLoggerProvider.get().instrument("org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6d1adbcc340x0_____org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6d1adbcc340x2_____org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6d1adbcc340x1");
        // nothing todo
    }

    @Override
    public synchronized boolean isConnected() {
        InstrumentationLoggerProvider.get().instrument("org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6dd9b6de400x1_____org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6dd9b6de400x0_____org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6dd9b6de400x3_____org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6dd9b6de400x2");
		InstrumentationLoggerProvider.get().instrument("org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6dd9b6de40");
		InstrumentationLoggerProvider.get().instrument("org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6dd9b6de400x30x0");
		return connected;
    }

    @Override
    public synchronized void connect() throws MessagingException {
        InstrumentationLoggerProvider.get().instrument("org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6df11a107f0x2_____org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6df11a107f0x1_____org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6df11a107f0x0_____org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6df11a107f0x3");
		InstrumentationLoggerProvider.get().instrument("org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6df11a107f");
		InstrumentationLoggerProvider.get().instrument("org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6df11a107f0x30x00x0_____org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6df11a107f0x30x0");
		connected = true;
    }

    @Override
    public synchronized void connect(String host, int port, String username,
            String password) throws MessagingException {
        InstrumentationLoggerProvider.get().instrument("org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6dff8db1b7");
				InstrumentationLoggerProvider.get().instrument("org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6dff8db1b70x7_____org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6dff8db1b70x6_____org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6dff8db1b70x60x0");
				InstrumentationLoggerProvider.get().instrument("org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6dff8db1b70x70x00x0_____org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6dff8db1b70x70x0");
		connect(username,password);
    }

    @Override
    public synchronized void connect(String host, String user, String password)
            throws MessagingException {
        InstrumentationLoggerProvider.get().instrument("org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6d682b41340x6");
				InstrumentationLoggerProvider.get().instrument("org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6d682b4134");
				InstrumentationLoggerProvider.get().instrument("org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6d682b41340x60x0_____org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6d682b41340x60x00x0");
		connect(user,password);
    }

    @Override
    public synchronized void connect(String user, String password) throws MessagingException {
        InstrumentationLoggerProvider.get().instrument("org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6d7298056b0x30x0_____org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6d7298056b0x0_____org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6d7298056b0x4_____org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6d7298056b0x2_____org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6d7298056b0x5_____org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6d7298056b0x1_____org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6d7298056b0x3_____org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6d7298056b0x40x0");
		InstrumentationLoggerProvider.get().instrument("org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6d7298056b");
		InstrumentationLoggerProvider.get().instrument("org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6d7298056b0x50x0_____org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6d7298056b0x50x00x10x0_____org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6d7298056b0x50x00x0_____org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6d7298056b0x50x00x1");
		String pass = validLogins.get(user);
        InstrumentationLoggerProvider.get().instrument("org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6d7298056b0x50x10x00x1_____org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6d7298056b0x50x10x0_____org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6d7298056b0x50x10x00x10x0_____org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6d7298056b0x50x10x00x0_____org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6d7298056b0x50x1");
		if (pass != null && validLogins.get(user).equals(password)) {
            InstrumentationLoggerProvider.get().instrument("org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6d7298056b0x50x10x1");
			InstrumentationLoggerProvider.get().instrument("org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6d7298056b0x50x10x10x00x0_____org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6d7298056b0x50x10x10x0");
			connect();
            InstrumentationLoggerProvider.get().instrument("org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6d7298056b0x50x10x10x1");
			return;
        }
        InstrumentationLoggerProvider.get().instrument("org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6d7298056b0x50x20x0_____org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6d7298056b0x50x2_____org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6d7298056b0x50x20x00x0");
		throw new AuthenticationFailedException("Invalid login, remember user demo/demo");
    }

    @Override
    public synchronized boolean hasCapability(String capability) throws MessagingException {
        InstrumentationLoggerProvider.get().instrument("org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6dd2797b4b0x3_____org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6dd2797b4b0x2_____org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6dd2797b4b0x4_____org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6dd2797b4b0x30x0_____org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6dd2797b4b0x1_____org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6dd2797b4b0x0");
		InstrumentationLoggerProvider.get().instrument("org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6dd2797b4b");
		InstrumentationLoggerProvider.get().instrument("org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6dd2797b4b0x40x00x0_____org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6dd2797b4b0x40x0");
		if (capList == null) {
			InstrumentationLoggerProvider.get().instrument("org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6dd2797b4b0x40x00x1");
			InstrumentationLoggerProvider.get().instrument("org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6dd2797b4b0x40x00x10x0");
			return false;
		}
        InstrumentationLoggerProvider.get().instrument("org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6dd2797b4b0x40x1_____org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6dd2797b4b0x40x10x0");
		return capList.contains(capability);
    }

    public synchronized void setCapabilities(List<String> capList) {
        InstrumentationLoggerProvider.get().instrument("org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6db759faa90x4_____org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6db759faa90x3_____org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6db759faa90x30x00x1_____org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6db759faa90x1_____org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6db759faa90x30x0_____org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6db759faa90x2_____org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6db759faa90x30x00x0_____org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6db759faa90x0_____org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6db759faa9");
		InstrumentationLoggerProvider.get().instrument("org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6db759faa90x40x0_____org_apache_hupa_server_mock_MockIMAPStore_java0x0d1ebbd6db759faa90x40x00x0_____org_apache_hupa_server_mock_MockIMAPStore_java0x0");
		this.capList = capList;
    }

}
